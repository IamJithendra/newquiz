name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'

permissions:
  contents: read
  checks: write
  id-token: write

env:
  JAVA_VERSION: "17"
  JAVA_DISTR: 'corretto'

jobs:
  test:
    name: "🤖 Unit Tests"
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTR }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Create google-services.json file
        run: cat /home/runner/work/newquiz/newquiz/app/google-services.json | base64

      - name: Put google-services.json data
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/newquiz/newquiz/app/google-services.json

      - name: Workaround for Android Gradle Plugin issue
        run: 'echo "ndk.dir=${ANDROID_HOME}/ndk-bundle" > local.properties'

      - name: Run unit tests
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: >
            testDebugUnitTest

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/testDebugUnitTest/TEST-*.xml'

  lint_off:
    name: "🔍 Android Lint"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTR }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Create google-services.json file
        run: cat /home/runner/work/newquiz/newquiz/app/google-services.json | base64

      - name: Put google-services.json data
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/newquiz/newquiz/app/google-services.json

      - name: Increase gradle daemon memory
        run: "echo \"org.gradle.jvmargs=-Xmx4096m\" >> gradle.properties"

      - name: Workaround for Android Gradle Plugin issue
        run: 'echo "ndk.dir=${ANDROID_HOME}/ndk-bundle" > local.properties'

      - name: Lint sources
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: lint --stacktrace

      - name: Generate GitHub annotations
        uses: yutailang0119/action-android-lint@v3
        with:
          report-path: '**/build/reports/*.xml'

  assemble_apk:
    name: "📦 Assemble APKs"
    needs:
      - test
      - lint_off
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTR }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Create google-services.json file
        run: cat /home/runner/work/newquiz/newquiz/app/google-services.json | base64

      - name: Put google-services.json data
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/newquiz/newquiz/app/google-services.json

      - name: Workaround for Android Gradle Plugin issue
        run: 'echo "ndk.dir=${ANDROID_HOME}/ndk-bundle" > local.properties'

      - name: Assemble debug APKs
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: assembleDebug

      - name: Upload APKs
        uses: actions/upload-artifact@v3
        with:
          name: artifacts.zip
          path: |
            app/build/outputs/apk/debug/app-universal-debug.apk
            newquiz_uploads/build/outputs/aar
